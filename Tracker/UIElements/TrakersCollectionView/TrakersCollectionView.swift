import UIKit

extension TrackersViewController: UICollectionViewDataSource, UICollectionViewDelegate {

    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        updatePlaceholder()
        print("üü¢ collectionView numberOfItemsInSection: \(trackers.count)")
        return trackers.count
    }

    func collectionView(_ collectionView: UICollectionView,
                        cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {

        guard let cell = collectionView.dequeueReusableCell(
            withReuseIdentifier: TrackerCell.reuseIdentifier,
            for: indexPath
        ) as? TrackerCell else {
            return UICollectionViewCell()
        }

        let tracker = trackers[indexPath.item]
        let isCompleted = isTrackerCompleted(tracker, on: currentDate)
        let count = completedTrackers.filter { $0.trackerId == tracker.id }.count

        print("üü° –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —è—á–µ–π–∫—É –¥–ª—è —Ç—Ä–µ–∫–µ—Ä–∞ '\(tracker.name)' | isCompleted: \(isCompleted) | count: \(count)")

        cell.configure(with: tracker, isCompleted: isCompleted, count: count)

        // –ü—Ä–æ–≤–µ—Ä–∫–∞: –±—É–¥—É—â–∞—è –¥–∞—Ç–∞?
        let isFuture = Calendar.current.startOfDay(for: currentDate) > Calendar.current.startOfDay(for: Date())
        cell.setCompletionEnabled(!isFuture)

        cell.onToggleCompletion = { [weak self, weak collectionView] in
            guard let self = self, let collectionView = collectionView else { return }

            if isFuture {
                print("‚ö†Ô∏è –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ç—Ä–µ–∫–µ—Ä –Ω–∞ –±—É–¥—É—â—É—é –¥–∞—Ç—É")
                return
            }

            if self.isTrackerCompleted(tracker, on: self.currentDate) {
                print("‚ùå –°–Ω–∏–º–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–µ–∫–µ—Ä–∞ '\(tracker.name)' –Ω–∞ –¥–∞—Ç—É \(self.currentDate)")
                self.unmarkTrackerAsCompleted(tracker, on: self.currentDate)
            } else {
                print("‚úÖ –û—Ç–º–µ—á–∞–µ–º —Ç—Ä–µ–∫–µ—Ä '\(tracker.name)' –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –Ω–∞ –¥–∞—Ç—É \(self.currentDate)")
                self.markTrackerAsCompleted(tracker, on: self.currentDate)
            }

            collectionView.reloadItems(at: [indexPath])
        }
        return cell
    }

    // MARK: - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç—Ä–µ–∫–µ—Ä–∞ —á–µ—Ä–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
    func addNewTracker(_ tracker: Tracker) {
        // –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –∏–∑ –∫–ª–∞—Å—Å–∞
        addTrackerToDefaultCategory(tracker)
    }
}
