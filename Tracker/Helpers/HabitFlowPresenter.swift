import Foundation

final class HabitFlowPresenter {
    
    private let categoryStore: TrackerCategoryStore
    private let defaultCategoryTitle = NSLocalizedString(
        "default_category_title",
        comment: "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Ç—Ä–µ–∫–µ—Ä–æ–≤"
    )
    
    init(categoryStore: TrackerCategoryStore) {
        self.categoryStore = categoryStore
    }
    
    
    func addTracker(_ tracker: Tracker, completion: @escaping () -> Void) {
        // ‚ö†Ô∏è –ù–µ —Å–æ–∑–¥–∞—ë–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        if let _ = categoryStore.fetchCategories().first(where: { $0.title == defaultCategoryTitle }) {
            categoryStore.addTracker(tracker, to: defaultCategoryTitle)
            print("üìå –¢—Ä–µ–∫–µ—Ä '\(tracker.name)' –¥–æ–±–∞–≤–ª–µ–Ω –≤ '\(defaultCategoryTitle)'")
        } else {
            print("‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è '\(defaultCategoryTitle)' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–π—Ç–µ –≤—Ä—É—á–Ω—É—é.")
        }
        DispatchQueue.main.async {
            completion()
        }
    }
    
    private func ensureDefaultCategory() {
        
        if !categoryStore.categories.contains(where: { $0.title == defaultCategoryTitle }) {
            
            let newCategory = TrackerCategory(
                id: UUID(),
                title: defaultCategoryTitle,
                trackers: []
            )
            categoryStore.add(newCategory)
            print("üìÇ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é '\(defaultCategoryTitle)'")
        }
    }
}
