import Foundation

final class HabitFlowPresenter {

    private let categoryStore: TrackerCategoryStore
    private let defaultCategoryTitle = "–ú–æ–∏ —Ç—Ä–µ–∫–µ—Ä—ã"

    init(categoryStore: TrackerCategoryStore) {
        self.categoryStore = categoryStore
    }

    /// –î–æ–±–∞–≤–ª—è–µ—Ç —Ç—Ä–µ–∫–µ—Ä –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    func addTracker(_ tracker: Tracker, completion: @escaping () -> Void) {
        ensureDefaultCategory()
        categoryStore.addTracker(tracker, to: defaultCategoryTitle)
        print("üìå –¢—Ä–µ–∫–µ—Ä '\(tracker.name)' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '\(defaultCategoryTitle)'")
        DispatchQueue.main.async {
            completion()
        }
    }

    private func ensureDefaultCategory() {
        
        if !categoryStore.fetchAll().contains(where: { $0.title == defaultCategoryTitle }) {
            
            let newCategory = TrackerCategory(
                id: UUID(),
                title: defaultCategoryTitle,
                trackers: []
            )
            categoryStore.add(newCategory)
            print("üìÇ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é '\(defaultCategoryTitle)'")
        }
    }
}
